{"version":3,"sources":["todo-context/actions.js","todo-context/reducer.js","todo-context/todo-context.js","todo-context/dispatcher.js","components/atoms/text-field.js","components/atoms/add-button.js","components/atoms/delete-icon-button.js","components/atoms/sortable-list.js","components/atoms/sortable-item.js","components/atoms/sortable-handle.js","components/organisms/todo-item.js","components/organisms/todo-component.js","components/TodoApp.js","routes.js","index.js"],"names":["eventName","_id","text","todos","concat","checked","todoIndex","newValue","copy","splice","oldIndex","newIndex","arrayMove","state","type","payload","actions","TodoContext","React","createContext","TodoContextProvider","children","useReducer","todoReducer","dispatchableActions","dispatch","createTodo","updateTodo","deleteTodo","moveTodo","dispatcher","contextValue","Provider","value","_TextField","handleTextChange","onBlur","useState","todoValue","setTodoValue","handleOnChange","useCallback","target","TextField","onChange","AddButton","handleOnClick","Button","variant","color","startIcon","onClick","DeleteIconButton","IconButton","aria-label","StyledList","styled","ul","SortableContainer","StyledItem","li","SortableElement","DragIcon","DragIndicatorIcon","SortableHandle","UPDATE_TODO","gql","DELETE_TODO","StyledTodoItem","div","TodoItem","useMutation","updateTodoGQL","deleteTodoGQL","useContext","handleDeleteClick","a","variables","isDeleted","data","console","log","saveToDB","CREATE_TODO","MOVE_TODO","TodoItems","moveTodoGQL","length","useDragHandle","onSortEnd","map","todo","index","key","TodoComponent","addTodoGQL","addTodo","AppContainer","TodoApp","className","RouterComponent","path","GET_TODOS","process","client","ApolloClient","uri","App","useQuery","loading","error","getTodos","rootContainer","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.3e25d7cf.chunk.js","sourcesContent":["import arrayMove from \"array-move\";\n\nexport const eventName = {\n  CREATE_TODO: \"CREATE_TODO\",\n  UPDATE_TODO: \"UPDATE_TODO\",\n  DELETE_TODO: \"DELETE_TODO\",\n  MOVE_TODO: \"MOVE_TODO\",\n};\n\nconst createNewTodo = ({ _id, text }) => ({ _id, text, checked: false });\n\nexport default {\n  createTodo: ({ _id, text, todos }) => {\n    const copy = todos.concat(createNewTodo({ _id, text }));\n    return copy;\n  },\n  updateTodo: ({ todoIndex, newValue, todos }) => {\n    const copy = [...todos];\n    copy[todoIndex].text = newValue;\n    return copy;\n  },\n  deleteTodo: ({ todoIndex, todos }) => {\n    const copy = [...todos];\n    copy.splice(todoIndex, 1);\n\n    return copy;\n  },\n  moveTodo: ({ oldIndex, newIndex, todos }) => {\n    return arrayMove(todos, oldIndex, newIndex);\n  },\n};\n","import actions, { eventName } from \"./actions\";\n\nexport default (state, { type, payload }) => {\n  switch (type) {\n    case eventName.CREATE_TODO: {\n      const { _id } = payload;\n      return actions.createTodo({ _id, text: \"\", todos: state });\n    }\n\n    case eventName.UPDATE_TODO: {\n      const { todoIndex, newValue } = payload;\n      return actions.updateTodo({ todoIndex, newValue, todos: state });\n    }\n\n    case eventName.DELETE_TODO: {\n      const { todoIndex } = payload;\n      return actions.deleteTodo({ todoIndex, todos: state });\n    }\n\n    case eventName.MOVE_TODO: {\n      const { oldIndex, newIndex } = payload;\n      return actions.moveTodo({ oldIndex, newIndex, todos: state });\n    }\n\n    default:\n      return;\n  }\n};\n","import React, { useReducer } from \"react\";\nimport dispatcher from \"./dispatcher\";\nimport todoReducer from \"./reducer\";\nconst TodoContext = React.createContext();\nexport default TodoContext;\n\nexport const TodoContextProvider = ({ state = [], children }) => {\n  const [todos, dispatch] = useReducer(todoReducer, state);\n\n  const dispatchableActions = dispatcher(dispatch);\n\n  const contextValue = {\n    ...dispatchableActions,\n    todos,\n  };\n\n  return (\n    <TodoContext.Provider value={contextValue}>{children}</TodoContext.Provider>\n  );\n};\n","import { eventName } from \"./actions\";\n\nexport default dispatch => {\n  const createTodo = payload => {\n    dispatch({ type: eventName.CREATE_TODO, payload });\n  };\n\n  const updateTodo = payload => {\n    dispatch({ type: eventName.UPDATE_TODO, payload });\n  };\n\n  const deleteTodo = payload => {\n    dispatch({ type: eventName.DELETE_TODO, payload });\n  };\n\n  const moveTodo = payload => {\n    dispatch({ type: eventName.MOVE_TODO, payload });\n  };\n\n  return {\n    createTodo,\n    updateTodo,\n    deleteTodo,\n    moveTodo\n  };\n};\n","import React, { useState, useCallback } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst _TextField = ({ value, handleTextChange, onBlur }) => {\n  const [todoValue, setTodoValue] = useState(value);\n\n  const handleOnChange = useCallback(\n    ({ target: { value } }) => {\n      handleTextChange(value);\n      setTodoValue(value);\n    },\n    [setTodoValue, handleTextChange]\n  );\n\n  return (\n    <TextField onChange={handleOnChange} value={todoValue} onBlur={onBlur} />\n  );\n};\n\nexport default _TextField;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nconst AddButton = ({ handleOnClick }) => {\n  const handleClick = () => {\n    handleOnClick();\n  };\n\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"secondary\"\n      startIcon={<AddIcon />}\n      onClick={handleClick}\n    >\n      Add\n    </Button>\n  );\n};\n\nexport default AddButton;\n","import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst DeleteIconButton = ({ handleOnClick }) => {\n  return (\n    <IconButton aria-label=\"delete\" onClick={handleOnClick}>\n      <DeleteIcon />\n    </IconButton>\n  );\n};\n\nexport default DeleteIconButton;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { SortableContainer } from \"react-sortable-hoc\";\n\nconst StyledList = styled.ul`\n  list-style: none;\n`;\n\nconst SortableList = ({ children }) => {\n  return <StyledList>{children}</StyledList>;\n};\n\nexport default SortableContainer(SortableList);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { SortableElement } from \"react-sortable-hoc\";\n\nconst StyledItem = styled.li`\n  list-style: none;\n`;\n\nconst SortableItem = ({ children }) => {\n  return <StyledItem>{children}</StyledItem>;\n};\n\nexport default SortableElement(SortableItem);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport DragIndicatorIcon from \"@material-ui/icons/DragIndicator\";\nimport { SortableHandle } from \"react-sortable-hoc\";\n\nconst DragIcon = styled(DragIndicatorIcon)`\n  cursor: grab;\n`;\n\nconst DragHandle = () => {\n  return <DragIcon />;\n};\n\nexport default SortableHandle(DragHandle);\n","import React, { useContext } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport styled from \"styled-components\";\nimport { TodoContext } from \"../../todo-context\";\nimport { DeleteButton, SortableHandle, TextField } from \"../atoms\";\n\nconst UPDATE_TODO = gql`\n  mutation UpdateTodo($_id: ID!, $text: String!) {\n    updateTodo(_id: $_id, text: $text) {\n      _id\n      text\n    }\n  }\n`;\n\nconst DELETE_TODO = gql`\n  mutation DeleteTodo($_id: ID!) {\n    deleteTodo(_id: $_id)\n  }\n`;\n\nconst StyledTodoItem = styled.div`\n  display: flex;\n`;\n\nconst TodoItem = ({ _id, todoIndex, text }) => {\n  const [updateTodoGQL] = useMutation(UPDATE_TODO);\n  const [deleteTodoGQL] = useMutation(DELETE_TODO);\n  const { updateTodo, deleteTodo, todos } = useContext(TodoContext);\n\n  const handleTextChange = (value) => {\n    updateTodo({ todoIndex, newValue: value, todos });\n  };\n\n  const handleDeleteClick = async () => {\n    const {\n      data: { deleteTodo: isDeleted },\n    } = await deleteTodoGQL({ variables: { _id } });\n    console.log({ isDeleted });\n\n    if (isDeleted) {\n      deleteTodo({ todoIndex, todos });\n    }\n  };\n\n  const saveToDB = async () => {\n    await updateTodoGQL({ variables: { _id, text } });\n  };\n\n  return (\n    <StyledTodoItem>\n      <SortableHandle />\n      <TextField\n        value={text}\n        handleTextChange={handleTextChange}\n        onBlur={saveToDB}\n      />\n      <DeleteButton handleOnClick={handleDeleteClick} />\n    </StyledTodoItem>\n  );\n};\n\nexport default TodoItem;\n","import React, { useContext } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { AddButton, SortableList, SortableItem } from \"../atoms\";\nimport TodoItem from \"./todo-item\";\nimport { TodoContext } from \"../../todo-context\";\n\nconst CREATE_TODO = gql`\n  mutation AddTodo($text: String) {\n    addTodo(text: $text) {\n      _id\n      text\n    }\n  }\n`;\n\nconst MOVE_TODO = gql`\n  mutation MoveTodo($oldIndex: Int!, $newIndex: Int!) {\n    moveTodo(oldIndex: $oldIndex, newIndex: $newIndex)\n  }\n`;\n\nconst TodoItems = () => {\n  const { todos, moveTodo } = useContext(TodoContext);\n  const [moveTodoGQL] = useMutation(MOVE_TODO);\n  if (todos.length === 0) {\n    return null;\n  }\n\n  return (\n    <SortableList\n      useDragHandle={true}\n      onSortEnd={async ({ oldIndex, newIndex }) => {\n        await moveTodoGQL({\n          variables: {\n            oldIndex,\n            newIndex,\n          },\n        });\n\n        return moveTodo({ oldIndex, newIndex });\n      }}\n    >\n      {todos.map((todo, index) => (\n        <SortableItem key={todo._id} index={index}>\n          <TodoItem _id={todo._id} todoIndex={index} text={todo.text} />\n        </SortableItem>\n      ))}\n    </SortableList>\n  );\n};\n\nconst TodoComponent = () => {\n  const { createTodo, todos } = useContext(TodoContext);\n  const [addTodoGQL] = useMutation(CREATE_TODO);\n\n  const handleOnClick = async () => {\n    const {\n      data: {\n        addTodo: { _id, text },\n      },\n    } = await addTodoGQL({ variables: { text: \"\" } });\n    createTodo({ _id, text, todos });\n  };\n\n  return (\n    <>\n      <TodoItems />\n      <AddButton handleOnClick={handleOnClick} />\n    </>\n  );\n};\n\nexport default TodoComponent;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { TodoComponent } from \"./organisms\";\n\nconst AppContainer = styled.div`\n  width: 300px;\n  border: 1px solid grey;\n  border-radius: 10px;\n  box-shadow: 4px 5px 10px -1px rgba(0, 0, 0, 0.24);\n`;\n\nconst TodoApp = () => {\n  return (\n    <AppContainer className=\"AppContainer\">\n      <TodoComponent />\n    </AppContainer>\n  );\n};\n\nexport default TodoApp;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport TodoApp from \"./components/TodoApp\";\n\nexport default function RouterComponent() {\n  return (\n    <Router>\n      {/* A <Switch> looks through its children <Route>s and\n              renders the first one that matches the current URL. */}\n      <Switch>\n        <Route path=\"/\">\n          <TodoApp />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ApolloClient, { gql } from \"apollo-boost\";\nimport { ApolloProvider, useQuery } from \"@apollo/react-hooks\";\nimport { TodoContextProvider } from \"./todo-context\";\nimport RouteApp from \"./routes\";\n\nconst GET_TODOS = gql`\n  {\n    getTodos {\n      _id\n      text\n    }\n  }\n`;\nconsole.log(\"process.env.NODE_ENV = \", process.env.NODE_ENV);\nconst uri =\n  process.env.NODE_ENV === \"production\"\n    ? \"https://todo-lean.herokuapp.com/graphql\"\n    : \"http://localhost:4000/graphql\";\n\nconst client = new ApolloClient({\n  uri,\n});\n\nconst App = () => {\n  const { data, loading, error } = useQuery(GET_TODOS);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return (\n    <TodoContextProvider state={data.getTodos}>\n      <RouteApp />\n    </TodoContextProvider>\n  );\n};\n\nconst rootContainer = document.getElementById(\"root\");\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  rootContainer\n);\n"],"sourceRoot":""}